OneDayMomRank


mpatel@blr-mpgxf nse_fo % ipython3
Python 3.8.6 (v3.8.6:db455296be, Sep 23 2020, 13:31:39) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.17.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: import yfinance as yf                                                                                                                                                                                                                                                                                                                                             

In [4]: nifty = yf.download("^NSEI", start="2020-01-01", end="2020-12-29")                                                                                                                                                                                                                                                                                                
[*********************100%***********************]  1 of 1 completed

In [5]: nifty                                                                                                                                                                                                                                                                                                                                                             
Out[5]: 
                    Open          High           Low         Close     Adj Close  Volume
Date                                                                                    
2020-01-01  12202.150391  12222.200195  12165.299805  12182.500000  12182.500000  304100
2020-01-02  12198.549805  12289.900391  12195.250000  12282.200195  12282.200195  407700
2020-01-03  12261.099609  12265.599609  12191.349609  12226.650391  12226.650391  428800
2020-01-06  12170.599609  12179.099609  11974.200195  11993.049805  11993.049805  396500
2020-01-07  12079.099609  12152.150391  12005.349609  12052.950195  12052.950195  447800
...                  ...           ...           ...           ...           ...     ...
2020-12-21  13741.900391  13777.500000  13131.450195  13328.400391  13328.400391  687300
2020-12-22  13373.650391  13492.049805  13192.900391  13466.299805  13466.299805  696200
2020-12-23  13473.500000  13619.450195  13432.200195  13601.099609  13601.099609  458700
2020-12-24  13672.150391  13771.750000  13626.900391  13749.250000  13749.250000  471400
2020-12-28  13815.150391  13885.299805  13811.549805  13873.200195  13873.200195  403600

[247 rows x 6 columns]

In [6]: nifty.reset_index(inplace=True)                                                                                                                                                                                                                                                                                                                                   

In [7]: nifty                                                                                                                                                                                                                                                                                                                                                             
Out[7]: 
          Date          Open          High           Low         Close     Adj Close  Volume
0   2020-01-01  12202.150391  12222.200195  12165.299805  12182.500000  12182.500000  304100
1   2020-01-02  12198.549805  12289.900391  12195.250000  12282.200195  12282.200195  407700
2   2020-01-03  12261.099609  12265.599609  12191.349609  12226.650391  12226.650391  428800
3   2020-01-06  12170.599609  12179.099609  11974.200195  11993.049805  11993.049805  396500
4   2020-01-07  12079.099609  12152.150391  12005.349609  12052.950195  12052.950195  447800
..         ...           ...           ...           ...           ...           ...     ...
242 2020-12-21  13741.900391  13777.500000  13131.450195  13328.400391  13328.400391  687300
243 2020-12-22  13373.650391  13492.049805  13192.900391  13466.299805  13466.299805  696200
244 2020-12-23  13473.500000  13619.450195  13432.200195  13601.099609  13601.099609  458700
245 2020-12-24  13672.150391  13771.750000  13626.900391  13749.250000  13749.250000  471400
246 2020-12-28  13815.150391  13885.299805  13811.549805  13873.200195  13873.200195  403600

[247 rows x 7 columns]

In [8]: symbols = ['HDFCBANK', 'HDFC', 'NTPC', 'TCS', 'INFY', 'RELIANCE', 'WIPRO', 'SUNPHARMA', 'MARUTI', 'KOTAKBANK', '^NSEI']                                                                                                                                                                                                                                           

In [9]: for symbol in symbols: 
   ...:     data = yf.download(symbol + '.NS', period="max") 
   ...:     data.reset_index(inplace = True) 
   ...:     data.to_csv("yf_csvs/" + symbol + ".csv") 
   ...:     print("Done writing {}".format(symbol)) 
   ...:                                                                                                                                                                                                                                                                                                                                                                   
[*********************100%***********************]  1 of 1 completed
Done writing HDFCBANK
[*********************100%***********************]  1 of 1 completed
Done writing HDFC
[*********************100%***********************]  1 of 1 completed
Done writing NTPC
[*********************100%***********************]  1 of 1 completed
Done writing TCS
[*********************100%***********************]  1 of 1 completed
Done writing INFY
[*********************100%***********************]  1 of 1 completed
Done writing RELIANCE
[*********************100%***********************]  1 of 1 completed
Done writing WIPRO
[*********************100%***********************]  1 of 1 completed
Done writing SUNPHARMA
[*********************100%***********************]  1 of 1 completed
Done writing MARUTI
[*********************100%***********************]  1 of 1 completed
Done writing KOTAKBANK
[*********************100%***********************]  1 of 1 completed

1 Failed download:
- ^NSEI.NS: No data found, symbol may be delisted
Done writing ^NSEI

In [10]: data = yf.download('^NSEI', period="max")                                                                                                                                                                                                                                                                                                                        
[*********************100%***********************]  1 of 1 completed

In [11]: data.reset_index(inplace = True)                                                                                                                                                                                                                                                                                                                                 

In [12]: data.to_csv("yf_csvs/NSEI.csv")                                                                                                                                                                                                                                                                                                                                  

In [13]: import pandas as pd                                                                                                                                                                                                                                                                                                                                              

In [14]: def priceChange(p): 
    ...:     nrows = p.shape[0] 
    ...:     pc = np.zeros(nrows) 
    ...:     for i in range(1,nrows): 
    ...:         pc[i] = (p[i]-p[i-1])/p[i-1] 
    ...:     return pc 
    ...:                                                                                                                                                                                                                                                                                                                                                                  

In [15]: symbols = ['HDFCBANK', 'HDFC', 'NTPC', 'TCS', 'INFY', 'RELIANCE', 'WIPRO', 'SUNPHARMA', 'MARUTI', 'KOTAKBANK']                                                                                                                                                                                                                                                   

In [16]: start_date ='2019-12-01'                                                                                                                                                                                                                                                                                                                                         

In [17]: end_date ='2020-12-01'                                                                                                                                                                                                                                                                                                                                           

In [18]: dates=pd.date_range(start_date,end_date)                                                                                                                                                                                                                                                                                                                         

In [19]: dates                                                                                                                                                                                                                                                                                                                                                            
Out[19]: 
DatetimeIndex(['2019-12-01', '2019-12-02', '2019-12-03', '2019-12-04',
               '2019-12-05', '2019-12-06', '2019-12-07', '2019-12-08',
               '2019-12-09', '2019-12-10',
               ...
               '2020-11-22', '2020-11-23', '2020-11-24', '2020-11-25',
               '2020-11-26', '2020-11-27', '2020-11-28', '2020-11-29',
               '2020-11-30', '2020-12-01'],
              dtype='datetime64[ns]', length=367, freq='D')

In [20]: df1=pd.DataFrame(index=dates)                                                                                                                                                                                                                                                                                                                                    

In [21]: dfNifty = pd.read_csv("yf_csvs/NSEI.csv", index_col="Date", parse_dates=True, usecols=['Date','Close'], na_values=['nan'])                                                                                                                                                                                                                                       

In [22]: dfNifty                                                                                                                                                                                                                                                                                                                                                          
Out[22]: 
                   Close
Date                    
2007-09-17   4494.649902
2007-09-18   4546.200195
2007-09-19   4732.350098
2007-09-20   4747.549805
2007-09-21   4837.549805
...                  ...
2020-12-23  13601.099609
2020-12-24  13749.250000
2020-12-28  13873.200195
2020-12-29  13932.599609
2020-12-30  13953.900391

[3247 rows x 1 columns]



In [26]: import numpy as np 


In [32]: df1                                                                                                                                                                                                                                                                                                                                                              
Out[32]: 
Empty DataFrame
Columns: []
Index: [2019-12-01 00:00:00, 2019-12-02 00:00:00, 2019-12-03 00:00:00, 2019-12-04 00:00:00, 2019-12-05 00:00:00, 2019-12-06 00:00:00, 2019-12-07 00:00:00, 2019-12-08 00:00:00, 2019-12-09 00:00:00, 2019-12-10 00:00:00, 2019-12-11 00:00:00, 2019-12-12 00:00:00, 2019-12-13 00:00:00, 2019-12-14 00:00:00, 2019-12-15 00:00:00, 2019-12-16 00:00:00, 2019-12-17 00:00:00, 2019-12-18 00:00:00, 2019-12-19 00:00:00, 2019-12-20 00:00:00, 2019-12-21 00:00:00, 2019-12-22 00:00:00, 2019-12-23 00:00:00, 2019-12-24 00:00:00, 2019-12-25 00:00:00, 2019-12-26 00:00:00, 2019-12-27 00:00:00, 2019-12-28 00:00:00, 2019-12-29 00:00:00, 2019-12-30 00:00:00, 2019-12-31 00:00:00, 2020-01-01 00:00:00, 2020-01-02 00:00:00, 2020-01-03 00:00:00, 2020-01-04 00:00:00, 2020-01-05 00:00:00, 2020-01-06 00:00:00, 2020-01-07 00:00:00, 2020-01-08 00:00:00, 2020-01-09 00:00:00, 2020-01-10 00:00:00, 2020-01-11 00:00:00, 2020-01-12 00:00:00, 2020-01-13 00:00:00, 2020-01-14 00:00:00, 2020-01-15 00:00:00, 2020-01-16 00:00:00, 2020-01-17 00:00:00, 2020-01-18 00:00:00, 2020-01-19 00:00:00, 2020-01-20 00:00:00, 2020-01-21 00:00:00, 2020-01-22 00:00:00, 2020-01-23 00:00:00, 2020-01-24 00:00:00, 2020-01-25 00:00:00, 2020-01-26 00:00:00, 2020-01-27 00:00:00, 2020-01-28 00:00:00, 2020-01-29 00:00:00, 2020-01-30 00:00:00, 2020-01-31 00:00:00, 2020-02-01 00:00:00, 2020-02-02 00:00:00, 2020-02-03 00:00:00, 2020-02-04 00:00:00, 2020-02-05 00:00:00, 2020-02-06 00:00:00, 2020-02-07 00:00:00, 2020-02-08 00:00:00, 2020-02-09 00:00:00, 2020-02-10 00:00:00, 2020-02-11 00:00:00, 2020-02-12 00:00:00, 2020-02-13 00:00:00, 2020-02-14 00:00:00, 2020-02-15 00:00:00, 2020-02-16 00:00:00, 2020-02-17 00:00:00, 2020-02-18 00:00:00, 2020-02-19 00:00:00, 2020-02-20 00:00:00, 2020-02-21 00:00:00, 2020-02-22 00:00:00, 2020-02-23 00:00:00, 2020-02-24 00:00:00, 2020-02-25 00:00:00, 2020-02-26 00:00:00, 2020-02-27 00:00:00, 2020-02-28 00:00:00, 2020-02-29 00:00:00, 2020-03-01 00:00:00, 2020-03-02 00:00:00, 2020-03-03 00:00:00, 2020-03-04 00:00:00, 2020-03-05 00:00:00, 2020-03-06 00:00:00, 2020-03-07 00:00:00, 2020-03-08 00:00:00, 2020-03-09 00:00:00, ...]

[367 rows x 0 columns]

                                                                                                                                                                                                                                     

In [41]: dfNifty                                                                                                                                                                                                                                                                                                                                                          
Out[41]: 
                   Close
Date                    
2007-09-17   4494.649902
2007-09-18   4546.200195
2007-09-19   4732.350098
2007-09-20   4747.549805
2007-09-21   4837.549805
...                  ...
2020-12-23  13601.099609
2020-12-24  13749.250000
2020-12-28  13873.200195
2020-12-29  13932.599609
2020-12-30  13953.900391

[3247 rows x 1 columns]

In [42]: dfNifty['priceChange'] = priceChange(dfNifty['Close'])                                                                                                                                                                                                                                                                                                           

In [43]: dfNifty                                                                                                                                                                                                                                                                                                                                                          
Out[43]: 
                   Close  priceChange
Date                                 
2007-09-17   4494.649902     0.000000
2007-09-18   4546.200195     0.011469
2007-09-19   4732.350098     0.040946
2007-09-20   4747.549805     0.003212
2007-09-21   4837.549805     0.018957
...                  ...          ...
2020-12-23  13601.099609     0.010010
2020-12-24  13749.250000     0.010893
2020-12-28  13873.200195     0.009015
2020-12-29  13932.599609     0.004282
2020-12-30  13953.900391     0.001529

[3247 rows x 2 columns]

In [44]: dfNifty = dfNifty.drop(['Close'],axis=1) 
    ...:                                                                                                                                                                                                                                                                                                                                                                  

In [45]: dfNifty                                                                                                                                                                                                                                                                                                                                                          
Out[45]: 
            priceChange
Date                   
2007-09-17     0.000000
2007-09-18     0.011469
2007-09-19     0.040946
2007-09-20     0.003212
2007-09-21     0.018957
...                 ...
2020-12-23     0.010010
2020-12-24     0.010893
2020-12-28     0.009015
2020-12-29     0.004282
2020-12-30     0.001529

[3247 rows x 1 columns]

In [46]: dfNifty=dfNifty.rename(columns={'priceChange':'Nifty50'})                                                                                                                                                                                                                                                                                                        

In [47]: dates=pd.date_range(start_date,end_date) 
    ...:                                                                                                                                                                                                                                                                                                                                                                  

In [48]: df1=pd.DataFrame(index=dates) 
    ...:                                                                                                                                                                                                                                                                                                                                                                  

In [49]: df1                                                                                                                                                                                                                                                                                                                                                              
Out[49]: 
Empty DataFrame
Columns: []
Index: [2019-12-01 00:00:00, 2019-12-02 00:00:00, 2019-12-03 00:00:00, 2019-12-04 00:00:00, 2019-12-05 00:00:00, 2019-12-06 00:00:00, 2019-12-07 00:00:00, 2019-12-08 00:00:00, 2019-12-09 00:00:00, 2019-12-10 00:00:00, 2019-12-11 00:00:00, 2019-12-12 00:00:00, 2019-12-13 00:00:00, 2019-12-14 00:00:00, 2019-12-15 00:00:00, 2019-12-16 00:00:00, 2019-12-17 00:00:00, 2019-12-18 00:00:00, 2019-12-19 00:00:00, 2019-12-20 00:00:00, 2019-12-21 00:00:00, 2019-12-22 00:00:00, 2019-12-23 00:00:00, 2019-12-24 00:00:00, 2019-12-25 00:00:00, 2019-12-26 00:00:00, 2019-12-27 00:00:00, 2019-12-28 00:00:00, 2019-12-29 00:00:00, 2019-12-30 00:00:00, 2019-12-31 00:00:00, 2020-01-01 00:00:00, 2020-01-02 00:00:00, 2020-01-03 00:00:00, 2020-01-04 00:00:00, 2020-01-05 00:00:00, 2020-01-06 00:00:00, 2020-01-07 00:00:00, 2020-01-08 00:00:00, 2020-01-09 00:00:00, 2020-01-10 00:00:00, 2020-01-11 00:00:00, 2020-01-12 00:00:00, 2020-01-13 00:00:00, 2020-01-14 00:00:00, 2020-01-15 00:00:00, 2020-01-16 00:00:00, 2020-01-17 00:00:00, 2020-01-18 00:00:00, 2020-01-19 00:00:00, 2020-01-20 00:00:00, 2020-01-21 00:00:00, 2020-01-22 00:00:00, 2020-01-23 00:00:00, 2020-01-24 00:00:00, 2020-01-25 00:00:00, 2020-01-26 00:00:00, 2020-01-27 00:00:00, 2020-01-28 00:00:00, 2020-01-29 00:00:00, 2020-01-30 00:00:00, 2020-01-31 00:00:00, 2020-02-01 00:00:00, 2020-02-02 00:00:00, 2020-02-03 00:00:00, 2020-02-04 00:00:00, 2020-02-05 00:00:00, 2020-02-06 00:00:00, 2020-02-07 00:00:00, 2020-02-08 00:00:00, 2020-02-09 00:00:00, 2020-02-10 00:00:00, 2020-02-11 00:00:00, 2020-02-12 00:00:00, 2020-02-13 00:00:00, 2020-02-14 00:00:00, 2020-02-15 00:00:00, 2020-02-16 00:00:00, 2020-02-17 00:00:00, 2020-02-18 00:00:00, 2020-02-19 00:00:00, 2020-02-20 00:00:00, 2020-02-21 00:00:00, 2020-02-22 00:00:00, 2020-02-23 00:00:00, 2020-02-24 00:00:00, 2020-02-25 00:00:00, 2020-02-26 00:00:00, 2020-02-27 00:00:00, 2020-02-28 00:00:00, 2020-02-29 00:00:00, 2020-03-01 00:00:00, 2020-03-02 00:00:00, 2020-03-03 00:00:00, 2020-03-04 00:00:00, 2020-03-05 00:00:00, 2020-03-06 00:00:00, 2020-03-07 00:00:00, 2020-03-08 00:00:00, 2020-03-09 00:00:00, ...]

[367 rows x 0 columns]

In [50]: df1=df1.join(dfNifty,how='inner') 
    ...:                                                                                                                                                                                                                                                                                                                                                                  

In [51]: df1                                                                                                                                                                                                                                                                                                                                                              
Out[51]: 
             Nifty50
2019-12-02 -0.000651
2019-12-03 -0.004482
2019-12-04  0.004085
2019-12-05 -0.002059
2019-12-06 -0.008063
...              ...
2020-11-24  0.009956
2020-11-25 -0.015071
2020-11-26  0.010001
2020-11-27 -0.001390
2020-12-01  0.010803

[250 rows x 1 columns]

In [52]: for symbol in symbols: 
    ...:     df_temp=pd.read_csv("yf_csvs//{}.csv".format(symbol),index_col="Date",parse_dates=True,usecols=['Date','Close'],na_values=['nan']) 
    ...:     df_temp['priceChange'] = priceChange(df_temp['Close']) 
    ...:     df_temp = df_temp.drop(['Close'],axis=1) 
    ...:     df_temp=df_temp.rename(columns={'priceChange':symbol}) 
    ...:     df1=df1.join(df_temp) 
    ...:                                                                                                                                                                                                                                                                                                                                                                  

In [53]: df1                                                                                                                                                                                                                                                                                                                                                              
Out[53]: 
             Nifty50  HDFCBANK      HDFC      NTPC       TCS      INFY  RELIANCE     WIPRO  SUNPHARMA    MARUTI  KOTAKBANK
2019-12-02 -0.000651 -0.007216  0.004070 -0.009024 -0.015682 -0.005242  0.022790  0.003786  -0.021896 -0.014698   0.011020
2019-12-03 -0.004482 -0.008177  0.005679 -0.006505  0.014819  0.008156 -0.004790 -0.007544  -0.014545 -0.000077   0.008420
2019-12-04  0.004085 -0.002987  0.001164  0.002182  0.013408  0.015035 -0.016594  0.022804   0.023293 -0.008783   0.002733
2019-12-05 -0.002059 -0.004834  0.002218 -0.006098  0.020592  0.008464 -0.001191  0.006193  -0.015776 -0.008939  -0.001181
2019-12-06 -0.008063  0.000361 -0.027024 -0.012708  0.001084  0.000350  0.002612 -0.011079  -0.018548 -0.017988   0.015158
...              ...       ...       ...       ...       ...       ...       ...       ...        ...       ...        ...
2020-11-24  0.009956  0.031263 -0.014706  0.005339 -0.000808  0.000176  0.006844 -0.000984   0.014234  0.024421   0.014253
2020-11-25 -0.015071 -0.024614 -0.011882 -0.002124 -0.007623 -0.021403 -0.008274 -0.015471  -0.026819 -0.014347  -0.032443
2020-11-26  0.010001  0.017002  0.021471  0.001597  0.007145 -0.002196  0.002464  0.013857   0.010865 -0.008709   0.014309
2020-11-27 -0.001390  0.009953  0.007974  0.006376 -0.015052 -0.011858 -0.011677 -0.012259  -0.000098  0.005941   0.009528
2020-12-01  0.010803 -0.005240  0.022471 -0.010032  0.017596  0.034409  0.013007  0.006705   0.054139  0.009366  -0.016386

[250 rows x 11 columns]

In [54]: df1_rank = pd.DataFrame(columns=df1.columns, index=df1.index)                                                                                                                                                                                                                                                                                                    

In [55]: df1_rank                                                                                                                                                                                                                                                                                                                                                         
Out[55]: 
           Nifty50 HDFCBANK HDFC NTPC  TCS INFY RELIANCE WIPRO SUNPHARMA MARUTI KOTAKBANK
2019-12-02     NaN      NaN  NaN  NaN  NaN  NaN      NaN   NaN       NaN    NaN       NaN
2019-12-03     NaN      NaN  NaN  NaN  NaN  NaN      NaN   NaN       NaN    NaN       NaN
2019-12-04     NaN      NaN  NaN  NaN  NaN  NaN      NaN   NaN       NaN    NaN       NaN
2019-12-05     NaN      NaN  NaN  NaN  NaN  NaN      NaN   NaN       NaN    NaN       NaN
2019-12-06     NaN      NaN  NaN  NaN  NaN  NaN      NaN   NaN       NaN    NaN       NaN
...            ...      ...  ...  ...  ...  ...      ...   ...       ...    ...       ...
2020-11-24     NaN      NaN  NaN  NaN  NaN  NaN      NaN   NaN       NaN    NaN       NaN
2020-11-25     NaN      NaN  NaN  NaN  NaN  NaN      NaN   NaN       NaN    NaN       NaN
2020-11-26     NaN      NaN  NaN  NaN  NaN  NaN      NaN   NaN       NaN    NaN       NaN
2020-11-27     NaN      NaN  NaN  NaN  NaN  NaN      NaN   NaN       NaN    NaN       NaN
2020-12-01     NaN      NaN  NaN  NaN  NaN  NaN      NaN   NaN       NaN    NaN       NaN

[250 rows x 11 columns]



In [61]: df1_rank = df1.rank(axis=1,ascending=False)                                                                                                                                                                                                                                                                                                                      

In [62]: df1_rank                                                                                                                                                                                                                                                                                                                                                         
Out[62]: 
            Nifty50  HDFCBANK  HDFC  NTPC   TCS  INFY  RELIANCE  WIPRO  SUNPHARMA  MARUTI  KOTAKBANK
2019-12-02      5.0       7.0   3.0   8.0  10.0   6.0       1.0    4.0       11.0     9.0        2.0
2019-12-03      6.0      10.0   4.0   8.0   1.0   3.0       7.0    9.0       11.0     5.0        2.0
2019-12-04      5.0       9.0   8.0   7.0   4.0   3.0      11.0    2.0        1.0    10.0        6.0
2019-12-05      7.0       8.0   4.0   9.0   1.0   2.0       6.0    3.0       11.0    10.0        5.0
2019-12-06      6.0       4.0  11.0   8.0   3.0   5.0       2.0    7.0       10.0     9.0        1.0
...             ...       ...   ...   ...   ...   ...       ...    ...        ...     ...        ...
2020-11-24      5.0       1.0  11.0   7.0   9.0   8.0       6.0   10.0        4.0     2.0        3.0
2020-11-25      6.0       9.0   4.0   1.0   2.0   8.0       3.0    7.0       10.0     5.0       11.0
2020-11-26      6.0       2.0   1.0   9.0   7.0  10.0       8.0    4.0        5.0    11.0        3.0
2020-11-27      7.0       1.0   3.0   4.0  11.0   9.0       8.0   10.0        6.0     5.0        2.0
2020-12-01      6.0       9.0   3.0  10.0   4.0   2.0       5.0    8.0        1.0     7.0       11.0

[250 rows x 11 columns]

In [63]: df1_rank.shape                                                                                                                                                                                                                                                                                                                                                   
Out[63]: (250, 11)

In [64]: df1_rank.shift(periods=1, axis=0)                                                                                                                                                                                                                                                                                                                                
Out[64]: 
            Nifty50  HDFCBANK  HDFC  NTPC   TCS  INFY  RELIANCE  WIPRO  SUNPHARMA  MARUTI  KOTAKBANK
2019-12-02      NaN       NaN   NaN   NaN   NaN   NaN       NaN    NaN        NaN     NaN        NaN
2019-12-03      5.0       7.0   3.0   8.0  10.0   6.0       1.0    4.0       11.0     9.0        2.0
2019-12-04      6.0      10.0   4.0   8.0   1.0   3.0       7.0    9.0       11.0     5.0        2.0
2019-12-05      5.0       9.0   8.0   7.0   4.0   3.0      11.0    2.0        1.0    10.0        6.0
2019-12-06      7.0       8.0   4.0   9.0   1.0   2.0       6.0    3.0       11.0    10.0        5.0
...             ...       ...   ...   ...   ...   ...       ...    ...        ...     ...        ...
2020-11-24      7.0      10.0  11.0   5.0   4.0   1.0       3.0    2.0        6.0     9.0        8.0
2020-11-25      5.0       1.0  11.0   7.0   9.0   8.0       6.0   10.0        4.0     2.0        3.0
2020-11-26      6.0       9.0   4.0   1.0   2.0   8.0       3.0    7.0       10.0     5.0       11.0
2020-11-27      6.0       2.0   1.0   9.0   7.0  10.0       8.0    4.0        5.0    11.0        3.0
2020-12-01      7.0       1.0   3.0   4.0  11.0   9.0       8.0   10.0        6.0     5.0        2.0

[250 rows x 11 columns]

In [65]: df1_rank = df1_rank.shift(periods=1, axis=0)                                                                                                                                                                                                                                                                                                                     

In [66]: df1_rank.shape[1]                                                                                                                                                                                                                                                                                                                                                
Out[66]: 11

In [67]: df1_rank.columns                                                                                                                                                                                                                                                                                                                                                 
Out[67]: 
Index(['Nifty50', 'HDFCBANK', 'HDFC', 'NTPC', 'TCS', 'INFY', 'RELIANCE',
       'WIPRO', 'SUNPHARMA', 'MARUTI', 'KOTAKBANK'],
      dtype='object')




In [69]: for col in df1_rank.columns: 
    ...:     df1_rank.loc[df1_rank[col] < 3.1, col] = 1 
    ...:     df1_rank.loc[df1_rank[col] > 3.1, col] = 0 
    ...:                                                                                                                                                                                                                                                                                                                                                                  

In [70]: df1_rank                                                                                                                                                                                                                                                                                                                                                         
Out[70]: 
            Nifty50  HDFCBANK  HDFC  NTPC  TCS  INFY  RELIANCE  WIPRO  SUNPHARMA  MARUTI  KOTAKBANK
2019-12-02      NaN       NaN   NaN   NaN  NaN   NaN       NaN    NaN        NaN     NaN        NaN
2019-12-03      0.0       0.0   1.0   0.0  0.0   0.0       1.0    0.0        0.0     0.0        1.0
2019-12-04      0.0       0.0   0.0   0.0  1.0   1.0       0.0    0.0        0.0     0.0        1.0
2019-12-05      0.0       0.0   0.0   0.0  0.0   1.0       0.0    1.0        1.0     0.0        0.0
2019-12-06      0.0       0.0   0.0   0.0  1.0   1.0       0.0    1.0        0.0     0.0        0.0
...             ...       ...   ...   ...  ...   ...       ...    ...        ...     ...        ...
2020-11-24      0.0       0.0   0.0   0.0  0.0   1.0       1.0    1.0        0.0     0.0        0.0
2020-11-25      0.0       1.0   0.0   0.0  0.0   0.0       0.0    0.0        0.0     1.0        1.0
2020-11-26      0.0       0.0   0.0   1.0  1.0   0.0       1.0    0.0        0.0     0.0        0.0
2020-11-27      0.0       1.0   1.0   0.0  0.0   0.0       0.0    0.0        0.0     0.0        1.0
2020-12-01      0.0       1.0   1.0   0.0  0.0   0.0       0.0    0.0        0.0     0.0        1.0

[250 rows x 11 columns]

In [71]: df1                                                                                                                                                                                                                                                                                                                                                              
Out[71]: 
             Nifty50  HDFCBANK      HDFC      NTPC       TCS      INFY  RELIANCE     WIPRO  SUNPHARMA    MARUTI  KOTAKBANK
2019-12-02 -0.000651 -0.007216  0.004070 -0.009024 -0.015682 -0.005242  0.022790  0.003786  -0.021896 -0.014698   0.011020
2019-12-03 -0.004482 -0.008177  0.005679 -0.006505  0.014819  0.008156 -0.004790 -0.007544  -0.014545 -0.000077   0.008420
2019-12-04  0.004085 -0.002987  0.001164  0.002182  0.013408  0.015035 -0.016594  0.022804   0.023293 -0.008783   0.002733
2019-12-05 -0.002059 -0.004834  0.002218 -0.006098  0.020592  0.008464 -0.001191  0.006193  -0.015776 -0.008939  -0.001181
2019-12-06 -0.008063  0.000361 -0.027024 -0.012708  0.001084  0.000350  0.002612 -0.011079  -0.018548 -0.017988   0.015158
...              ...       ...       ...       ...       ...       ...       ...       ...        ...       ...        ...
2020-11-24  0.009956  0.031263 -0.014706  0.005339 -0.000808  0.000176  0.006844 -0.000984   0.014234  0.024421   0.014253
2020-11-25 -0.015071 -0.024614 -0.011882 -0.002124 -0.007623 -0.021403 -0.008274 -0.015471  -0.026819 -0.014347  -0.032443
2020-11-26  0.010001  0.017002  0.021471  0.001597  0.007145 -0.002196  0.002464  0.013857   0.010865 -0.008709   0.014309
2020-11-27 -0.001390  0.009953  0.007974  0.006376 -0.015052 -0.011858 -0.011677 -0.012259  -0.000098  0.005941   0.009528
2020-12-01  0.010803 -0.005240  0.022471 -0.010032  0.017596  0.034409  0.013007  0.006705   0.054139  0.009366  -0.016386

[250 rows x 11 columns]

In [72]: out_df = df1_rank * df1                                                                                                                                                                                                                                                                                                                                          

In [73]: out_df                                                                                                                                                                                                                                                                                                                                                           
Out[73]: 
            Nifty50  HDFCBANK      HDFC      NTPC       TCS      INFY  RELIANCE     WIPRO  SUNPHARMA    MARUTI  KOTAKBANK
2019-12-02      NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        NaN       NaN        NaN
2019-12-03     -0.0 -0.000000  0.005679 -0.000000  0.000000  0.000000 -0.004790 -0.000000  -0.000000 -0.000000   0.008420
2019-12-04      0.0 -0.000000  0.000000  0.000000  0.013408  0.015035 -0.000000  0.000000   0.000000 -0.000000   0.002733
2019-12-05     -0.0 -0.000000  0.000000 -0.000000  0.000000  0.008464 -0.000000  0.006193  -0.015776 -0.000000  -0.000000
2019-12-06     -0.0  0.000000 -0.000000 -0.000000  0.001084  0.000350  0.000000 -0.011079  -0.000000 -0.000000   0.000000
...             ...       ...       ...       ...       ...       ...       ...       ...        ...       ...        ...
2020-11-24      0.0  0.000000 -0.000000  0.000000 -0.000000  0.000176  0.006844 -0.000984   0.000000  0.000000   0.000000
2020-11-25     -0.0 -0.024614 -0.000000 -0.000000 -0.000000 -0.000000 -0.000000 -0.000000  -0.000000 -0.014347  -0.032443
2020-11-26      0.0  0.000000  0.000000  0.001597  0.007145 -0.000000  0.002464  0.000000   0.000000 -0.000000   0.000000
2020-11-27     -0.0  0.009953  0.007974  0.000000 -0.000000 -0.000000 -0.000000 -0.000000  -0.000000  0.000000   0.009528
2020-12-01      0.0 -0.005240  0.022471 -0.000000  0.000000  0.000000  0.000000  0.000000   0.000000  0.000000  -0.016386

[250 rows x 11 columns]

In [74]: out_df = df1_rank * df1 * 100                                                                                                                                                                                                                                                                                                                                    

In [75]: out_df                                                                                                                                                                                                                                                                                                                                                           
Out[75]: 
            Nifty50  HDFCBANK      HDFC      NTPC       TCS      INFY  RELIANCE     WIPRO  SUNPHARMA    MARUTI  KOTAKBANK
2019-12-02      NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        NaN       NaN        NaN
2019-12-03     -0.0 -0.000000  0.567929 -0.000000  0.000000  0.000000 -0.479040 -0.000000  -0.000000 -0.000000   0.842009
2019-12-04      0.0 -0.000000  0.000000  0.000000  1.340809  1.503544 -0.000000  0.000000   0.000000 -0.000000   0.273266
2019-12-05     -0.0 -0.000000  0.000000 -0.000000  0.000000  0.846441 -0.000000  0.619323  -1.577643 -0.000000  -0.000000
2019-12-06     -0.0  0.000000 -0.000000 -0.000000  0.108426  0.034972  0.000000 -1.107918  -0.000000 -0.000000   0.000000
...             ...       ...       ...       ...       ...       ...       ...       ...        ...       ...        ...
2020-11-24      0.0  0.000000 -0.000000  0.000000 -0.000000  0.017553  0.684375 -0.098358   0.000000  0.000000   0.000000
2020-11-25     -0.0 -2.461403 -0.000000 -0.000000 -0.000000 -0.000000 -0.000000 -0.000000  -0.000000 -1.434674  -3.244328
2020-11-26      0.0  0.000000  0.000000  0.159661  0.714473 -0.000000  0.246428  0.000000   0.000000 -0.000000   0.000000
2020-11-27     -0.0  0.995335  0.797449  0.000000 -0.000000 -0.000000 -0.000000 -0.000000  -0.000000  0.000000   0.952835
2020-12-01      0.0 -0.523991  2.247089 -0.000000  0.000000  0.000000  0.000000  0.000000   0.000000  0.000000  -1.638614

[250 rows x 11 columns]

In [76]: out_df = df1_rank * df1 * 100 * 1000                                                                                                                                                                                                                                                                                                                             

In [77]: out_df                                                                                                                                                                                                                                                                                                                                                           
Out[77]: 
            Nifty50     HDFCBANK         HDFC        NTPC          TCS         INFY    RELIANCE        WIPRO    SUNPHARMA       MARUTI    KOTAKBANK
2019-12-02      NaN          NaN          NaN         NaN          NaN          NaN         NaN          NaN          NaN          NaN          NaN
2019-12-03     -0.0    -0.000000   567.929115   -0.000000     0.000000     0.000000 -479.040377    -0.000000    -0.000000    -0.000000   842.008573
2019-12-04      0.0    -0.000000     0.000000    0.000000  1340.809361  1503.544121   -0.000000     0.000000     0.000000    -0.000000   273.265523
2019-12-05     -0.0    -0.000000     0.000000   -0.000000     0.000000   846.441448   -0.000000   619.322881 -1577.642508    -0.000000    -0.000000
2019-12-06     -0.0     0.000000    -0.000000   -0.000000   108.426379    34.972373    0.000000 -1107.918335    -0.000000    -0.000000     0.000000
...             ...          ...          ...         ...          ...          ...         ...          ...          ...          ...          ...
2020-11-24      0.0     0.000000    -0.000000    0.000000    -0.000000    17.552594  684.374737   -98.357762     0.000000     0.000000     0.000000
2020-11-25     -0.0 -2461.403389    -0.000000   -0.000000    -0.000000    -0.000000   -0.000000    -0.000000    -0.000000 -1434.674067 -3244.328144
2020-11-26      0.0     0.000000     0.000000  159.661023   714.472605    -0.000000  246.428105     0.000000     0.000000    -0.000000     0.000000
2020-11-27     -0.0   995.335291   797.449001    0.000000    -0.000000    -0.000000   -0.000000    -0.000000    -0.000000     0.000000   952.834695
2020-12-01      0.0  -523.991178  2247.089249   -0.000000     0.000000     0.000000    0.000000     0.000000     0.000000     0.000000 -1638.613623

[250 rows x 11 columns]

In [78]: out_df.sum(axis=1, skipna=True)                                                                                                                                                                                                                                                                                                                                  
Out[78]: 
2019-12-02       0.000000
2019-12-03     930.897311
2019-12-04    3117.619005
2019-12-05    -111.878178
2019-12-06    -964.519583
                 ...     
2020-11-24     603.569569
2020-11-25   -7140.405601
2020-11-26    1120.561733
2020-11-27    2745.618987
2020-12-01      84.484448
Length: 250, dtype: float64

In [79]: out_df['TotalReturn'] = out_df.sum(axis=1, skipna=True)                                                                                                                                                                                                                                                                                                          

In [80]: out_df                                                                                                                                                                                                                                                                                                                                                           
Out[80]: 
            Nifty50     HDFCBANK         HDFC        NTPC          TCS         INFY    RELIANCE        WIPRO    SUNPHARMA       MARUTI    KOTAKBANK  TotalReturn
2019-12-02      NaN          NaN          NaN         NaN          NaN          NaN         NaN          NaN          NaN          NaN          NaN     0.000000
2019-12-03     -0.0    -0.000000   567.929115   -0.000000     0.000000     0.000000 -479.040377    -0.000000    -0.000000    -0.000000   842.008573   930.897311
2019-12-04      0.0    -0.000000     0.000000    0.000000  1340.809361  1503.544121   -0.000000     0.000000     0.000000    -0.000000   273.265523  3117.619005
2019-12-05     -0.0    -0.000000     0.000000   -0.000000     0.000000   846.441448   -0.000000   619.322881 -1577.642508    -0.000000    -0.000000  -111.878178
2019-12-06     -0.0     0.000000    -0.000000   -0.000000   108.426379    34.972373    0.000000 -1107.918335    -0.000000    -0.000000     0.000000  -964.519583
...             ...          ...          ...         ...          ...          ...         ...          ...          ...          ...          ...          ...
2020-11-24      0.0     0.000000    -0.000000    0.000000    -0.000000    17.552594  684.374737   -98.357762     0.000000     0.000000     0.000000   603.569569
2020-11-25     -0.0 -2461.403389    -0.000000   -0.000000    -0.000000    -0.000000   -0.000000    -0.000000    -0.000000 -1434.674067 -3244.328144 -7140.405601
2020-11-26      0.0     0.000000     0.000000  159.661023   714.472605    -0.000000  246.428105     0.000000     0.000000    -0.000000     0.000000  1120.561733
2020-11-27     -0.0   995.335291   797.449001    0.000000    -0.000000    -0.000000   -0.000000    -0.000000    -0.000000     0.000000   952.834695  2745.618987
2020-12-01      0.0  -523.991178  2247.089249   -0.000000     0.000000     0.000000    0.000000     0.000000     0.000000     0.000000 -1638.613623    84.484448

[250 rows x 12 columns]

In [81]: out_df['TotalReturn']                                                                                                                                                                                                                                                                                                                                            
Out[81]: 
2019-12-02       0.000000
2019-12-03     930.897311
2019-12-04    3117.619005
2019-12-05    -111.878178
2019-12-06    -964.519583
                 ...     
2020-11-24     603.569569
2020-11-25   -7140.405601
2020-11-26    1120.561733
2020-11-27    2745.618987
2020-12-01      84.484448
Name: TotalReturn, Length: 250, dtype: float64

In [82]: sum(out_df['TotalReturn'])                                                                                                                                                                                                                                                                                                                                       
Out[82]: 70210.60521413834

In [83]: out_df.SUNPHARMA                                                                                                                                                                                                                                                                                                                                                 
Out[83]: 
2019-12-02            NaN
2019-12-03      -0.000000
2019-12-04       0.000000
2019-12-05   -1577.642508
2019-12-06      -0.000000
                 ...     
2020-11-24       0.000000
2020-11-25      -0.000000
2020-11-26       0.000000
2020-11-27      -0.000000
2020-12-01       0.000000
Name: SUNPHARMA, Length: 250, dtype: float64

In [84]: out_df.SUNPHARMA.std()                                                                                                                                                                                                                                                                                                                                           
Out[84]: 1511.8712209779385

In [85]: out_df.SUNPHARMA.min()                                                                                                                                                                                                                                                                                                                                           
Out[85]: -6387.764282501125

In [86]: out_df.SUNPHARMA.max()                                                                                                                                                                                                                                                                                                                                           
Out[86]: 11012.100692175503

In [87]: out_df.SUNPHARMA.sum()                                                                                                                                                                                                                                                                                                                                           
Out[87]: 5556.388269885913

In [88]: out_df.Nifty50.sum()                                                                                                                                                                                                                                                                                                                                             
Out[88]: 4461.574136327141

In [89]: out_df.HDFC.sum()                                                                                                                                                                                                                                                                                                                                                
Out[89]: 3783.2763938987973

In [90]: out_df.NTPC.sum()                                                                                                                                                                                                                                                                                                                                                
Out[90]: 32009.684152515903

In [91]: out_df.TCS.sum()                                                                                                                                                                                                                                                                                                                                                 
Out[91]: -3120.0855896410358

In [92]: out_df.INFY.sum()                                                                                                                                                                                                                                                                                                                                                
Out[92]: 4203.347673143864

In [93]: out_df.RELIANCE.sum()                                                                                                                                                                                                                                                                                                                                            
Out[93]: 32505.887161873343

In [94]: out_df.WIPRO.sum()                                                                                                                                                                                                                                                                                                                                               
Out[94]: 17243.02222446295

In [95]: out_df.MARUTI.sum()                                                                                                                                                                                                                                                                                                                                              
Out[95]: -1314.808725011581

In [96]: out_df.KOTAKBANK.sum()                                                                                                                                                                                                                                                                                                                                           
Out[96]: -27392.449913887

In [97]:



-----------------------------------------------
## PDR Reader usage 
-----------------------------------------------



Last login: Wed Dec 30 14:42:37 on ttys001
mpatel@blr-mpgxf ~ % cd PycharmProjects 
mpatel@blr-mpgxf PycharmProjects % cd nse_fo 
mpatel@blr-mpgxf nse_fo % ipython3
Python 3.8.6 (v3.8.6:db455296be, Sep 23 2020, 13:31:39) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.17.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: import pandas_datareader as pdr                                                                                                                                                                   

In [2]: import pandas as pd                                                                                                                                                                               

In [3]: import datetime                                                                                                                                                                                   

In [4]: start = datetime.datetime(2007, 1, 1)                                                                                                                                                             

In [5]: end = datetime.datetime(2020, 12, 30)                                                                                                                                                             

In [6]: mrf = pdr.DataReader("MRF.NS","yahoo", start, end)                                                                                                                                                

In [7]: mrf                                                                                                                                                                                               
Out[7]: 
                    High           Low          Open         Close   Volume     Adj Close
Date                                                                                     
2007-01-02   4388.000000   4302.000000   4388.000000   4339.850098   1611.0   4150.045898
2007-01-03   4369.000000   4230.000000   4230.000000   4331.049805    791.0   4141.632324
2007-01-04   4353.000000   4320.149902   4335.000000   4325.450195    581.0   4136.278809
2007-01-05   4372.000000   4280.000000   4372.000000   4284.899902    441.0   4097.500977
2007-01-08   4325.000000   4205.200195   4206.100098   4289.450195    621.0   4101.850098
...                  ...           ...           ...           ...      ...           ...
2020-12-23  76850.000000  75406.398438  76000.000000  75854.898438  15368.0  75854.898438
2020-12-24  76550.000000  75550.000000  76400.000000  75892.398438  14445.0  75892.398438
2020-12-28  76840.203125  75008.898438  76100.000000  75366.703125  18088.0  75366.703125
2020-12-29  76000.000000  74860.000000  75899.000000  75677.500000  14694.0  75677.500000
2020-12-30  77672.796875  75300.000000  75561.000000  76925.101562  16171.0  76925.101562

[3441 rows x 6 columns]

In [8]: mrf = pdr.DataReader("MRF.NS","yahoo", start, end)["Adj Close"]                                                                                                                                   

In [9]: mrf                                                                                                                                                                                               
Out[9]: 
Date
2007-01-02     4150.045898
2007-01-03     4141.632324
2007-01-04     4136.278809
2007-01-05     4097.500977
2007-01-08     4101.850098
                  ...     
2020-12-23    75854.898438
2020-12-24    75892.398438
2020-12-28    75366.703125
2020-12-29    75677.500000
2020-12-30    76925.101562
Name: Adj Close, Length: 3441, dtype: float64

In [10]:  
    ...:  
    ...: def returns(prices): 
    ...:     """ 
    ...:     Calulates the growth of 1 dollar invested in a stock with given prices 
    ...:     """ 
    ...:     return (1 + prices.pct_change(1)).cumprod() 
    ...:                                                                                                                                                                                                  

In [11]: mrf_returns = returns(mrf)                                                                                                                                                                       

In [12]: mrf_returns                                                                                                                                                                                      
Out[12]: 
Date
2007-01-02          NaN
2007-01-03     0.997973
2007-01-04     0.996683
2007-01-05     0.987339
2007-01-08     0.988387
                ...    
2020-12-23    18.278087
2020-12-24    18.287123
2020-12-28    18.160451
2020-12-29    18.235340
2020-12-30    18.535964
Name: Adj Close, Length: 3441, dtype: float64

In [13]: def drawdown(prices): 
    ...:     """ 
    ...:     Calulates the drawdown of a stock with given prices 
    ...:     """ 
    ...:     rets = returns(prices) 
    ...:     return (rets.div(rets.cummax()) - 1) * 100 
    ...:                                                                                                                                                                                                  

In [14]: def cagr(prices): 
    ...:     """ 
    ...:     Calculates the Compound Annual Growth Rate (CAGR) of a stock with given prices 
    ...:     """ 
    ...:     delta = (prices.index[-1] - prices.index[0]).days / 365.25 
    ...:     return ((prices[-1] / prices[0]) ** (1 / delta) - 1) * 100 
    ...:                                                                                                                                                                                                  

In [15]: mrf_returns = returns(mrf).rename("mrf")                                                                                                                                                         

In [16]: mrf_returns                                                                                                                                                                                      
Out[16]: 
Date
2007-01-02          NaN
2007-01-03     0.997973
2007-01-04     0.996683
2007-01-05     0.987339
2007-01-08     0.988387
                ...    
2020-12-23    18.278087
2020-12-24    18.287123
2020-12-28    18.160451
2020-12-29    18.235340
2020-12-30    18.535964
Name: mrf, Length: 3441, dtype: float64


In [18]: cagr(mrf)                                                                                                                                                                                        
Out[18]: 23.201732620806116

In [19]: mrf_dd = drawdown(mrf)                                                                                                                                                                           

In [20]: mrf_dd                                                                                                                                                                                           
Out[20]: 
Date
2007-01-02         NaN
2007-01-03    0.000000
2007-01-04   -0.129261
2007-01-05   -1.065554
2007-01-08   -0.960545
                ...   
2020-12-23   -5.797027
2020-12-24   -5.750456
2020-12-28   -6.403308
2020-12-29   -6.017335
2020-12-30   -4.467959
Name: Adj Close, Length: 3441, dtype: float64

In [21]: import plotly.express as px                                                                                                                                                                      


In [26]: mrf_dd[2]                                                                                                                                                                                        
Out[26]: -0.12926100643204652

In [27]: mrf_dd["2007-01-04"]                                                                                                                                                                             
Out[27]: -0.12926100643204652


In [29]: type(mrf_dd)                                                                                                                                                                                     
Out[29]: pandas.core.series.Series

In [30]: type(mrf)                                                                                                                                                                                        
Out[30]: pandas.core.series.Series

In [31]: tcs = pdr.DataReader("TCS.NS","yahoo", start, end)                                                                                                                                               

In [32]: type(tcs)                                                                                                                                                                                        
Out[32]: pandas.core.frame.DataFrame

In [33]: mrf_dd.to_frame()                                                                                                                                                                                
Out[33]: 
            Adj Close
Date                 
2007-01-02        NaN
2007-01-03   0.000000
2007-01-04  -0.129261
2007-01-05  -1.065554
2007-01-08  -0.960545
...               ...
2020-12-23  -5.797027
2020-12-24  -5.750456
2020-12-28  -6.403308
2020-12-29  -6.017335
2020-12-30  -4.467959

[3441 rows x 1 columns]

In [34]: type(mrf)                                                                                                                                                                                        
Out[34]: pandas.core.series.Series

In [35]: type(mrf_dd)                                                                                                                                                                                     
Out[35]: pandas.core.series.Series

In [36]: type(mrf_dd.to_frame())                                                                                                                                                                          
Out[36]: pandas.core.frame.DataFrame
                                                                                                                                                                                              

In [43]: print(mrf_dd.to_frame())                                                                                                                                                                         
            Adj Close
Date                 
2007-01-02        NaN
2007-01-03   0.000000
2007-01-04  -0.129261
2007-01-05  -1.065554
2007-01-08  -0.960545
...               ...
2020-12-23  -5.797027
2020-12-24  -5.750456
2020-12-28  -6.403308
2020-12-29  -6.017335
2020-12-30  -4.467959

[3441 rows x 1 columns]

In [44]: print(mrf_dd.to_frame().reset_index())                                                                                                                                                           
           Date  Adj Close
0    2007-01-02        NaN
1    2007-01-03   0.000000
2    2007-01-04  -0.129261
3    2007-01-05  -1.065554
4    2007-01-08  -0.960545
...         ...        ...
3436 2020-12-23  -5.797027
3437 2020-12-24  -5.750456
3438 2020-12-28  -6.403308
3439 2020-12-29  -6.017335
3440 2020-12-30  -4.467959

[3441 rows x 2 columns]


In [47]: px.line(mrf_dd.to_frame().reset_index(), x="Date", y="Adj Close")                                                                                                                                
Out[47]: 
Figure({
    'data': [{'hovertemplate': 'Date=%{x}<br>Adj Close=%{y}<extra></extra>',
              'legendgroup': '',
              'line': {'color': '#636efa', 'dash': 'solid'},
              'mode': 'lines',
              'name': '',
              'showlegend': False,
              'type': 'scattergl',
              'x': array([datetime.datetime(2007, 1, 2, 0, 0),
                          datetime.datetime(2007, 1, 3, 0, 0),
                          datetime.datetime(2007, 1, 4, 0, 0), ...,
                          datetime.datetime(2020, 12, 28, 0, 0),
                          datetime.datetime(2020, 12, 29, 0, 0),
                          datetime.datetime(2020, 12, 30, 0, 0)], dtype=object),
              'xaxis': 'x',
              'y': array([        nan,  0.        , -0.12926101, ..., -6.40330838, -6.01733476,
                          -4.46795852]),
              'yaxis': 'y'}],
    'layout': {'legend': {'tracegroupgap': 0},
               'margin': {'t': 60},
               'template': '...',
               'xaxis': {'anchor': 'y', 'domain': [0.0, 1.0], 'title': {'text': 'Date'}},
               'yaxis': {'anchor': 'x', 'domain': [0.0, 1.0], 'title': {'text': 'Adj Close'}}}
})

In [48]: px.line(mrf_dd.to_frame().reset_index(), x="Date", y="Adj Close").show()                                                                                                                         

In [49]:                                                                                                                                                                                                  

In [49]: len(mrf)                                                                                                                                                                                         
Out[49]: 3441

In [50]: import numpy as np                                                                                                                                                                               

In [51]: np.arange(len(mrf))                                                                                                                                                                              
Out[51]: array([   0,    1,    2, ..., 3438, 3439, 3440])

In [52]: mrf                                                                                                                                                                                              
Out[52]: 
Date
2007-01-02     4150.045898
2007-01-03     4141.632324
2007-01-04     4136.278809
2007-01-05     4097.500977
2007-01-08     4101.850098
                  ...     
2020-12-23    75854.898438
2020-12-24    75892.398438
2020-12-28    75366.703125
2020-12-29    75677.500000
2020-12-30    76925.101562
Name: Adj Close, Length: 3441, dtype: float64

In [53]: mrf_returns                                                                                                                                                                                      
Out[53]: 
Date
2007-01-02          NaN
2007-01-03     0.997973
2007-01-04     0.996683
2007-01-05     0.987339
2007-01-08     0.988387
                ...    
2020-12-23    18.278087
2020-12-24    18.287123
2020-12-28    18.160451
2020-12-29    18.235340
2020-12-30    18.535964
Name: mrf, Length: 3441, dtype: float64

In [54]: np.log(mrf)                                                                                                                                                                                      
Out[54]: 
Date
2007-01-02     8.330875
2007-01-03     8.328845
2007-01-04     8.327552
2007-01-05     8.318133
2007-01-08     8.319193
                ...    
2020-12-23    11.236578
2020-12-24    11.237072
2020-12-28    11.230121
2020-12-29    11.234236
2020-12-30    11.250588
Name: Adj Close, Length: 3441, dtype: float64

In [55]: type(mrf)                                                                                                                                                                                        
Out[55]: pandas.core.series.Series

In [56]: from scipy.stats import linregress                                                                                                                                                               

                                                                                                                                                                                             


In [62]: ret = np.log(mrf)                                                                                                                                                                                

In [63]: x = np.arange(len(ret))                                                                                                                                                                          

In [64]: ret                                                                                                                                                                                              
Out[64]: 
Date
2007-01-02     8.330875
2007-01-03     8.328845
2007-01-04     8.327552
2007-01-05     8.318133
2007-01-08     8.319193
                ...    
2020-12-23    11.236578
2020-12-24    11.237072
2020-12-28    11.230121
2020-12-29    11.234236
2020-12-30    11.250588
Name: Adj Close, Length: 3441, dtype: float64

In [65]: x                                                                                                                                                                                                
Out[65]: array([   0,    1,    2, ..., 3438, 3439, 3440])



In [70]: type(x)                                                                                                                                                                                          
Out[70]: numpy.ndarray

In [71]: type(ret)                                                                                                                                                                                        
Out[71]: pandas.core.series.Series

In [72]: type(ret.to_numpy)                                                                                                                                                                               
Out[72]: method

In [73]: type(ret.to_numpy())                                                                                                                                                                             
Out[73]: numpy.ndarray

In [74]: slope, intercept, r_value, p_value, std_err = linregress(x, ret)                                                                                                                                 

In [75]: slope                                                                                                                                                                                            
Out[75]: 0.001104445153483357

In [76]: intercept                                                                                                                                                                                        
Out[76]: 7.847631657775678

In [77]: r_value                                                                                                                                                                                          
Out[77]: 0.9553313429098595

In [78]: p_value                                                                                                                                                                                          
Out[78]: 0.0

In [79]: std_err                                                                                                                                                                                          
Out[79]: 5.826203749164526e-06


In [81]: ((1 + slope) ** 252) * (r_value ** 2)                                                                                                                                                            
Out[81]: 1.20535304997654

In [82]: exit                                                                                                                                                                                             
mpatel@blr-mpgxf nse_fo % 


Links 

https://teddykoker.com/2019/05/momentum-strategy-from-stocks-on-the-move-in-python/
https://github.com/teddykoker/blog/blob/master/_notebooks/2019-04-21-simulating-historical-performance-of-leveraged-etfs-in-python.ipynb
https://www.backtrader.com/blog/2019-05-20-momentum-strategy/momentum-strategy/
https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.linregress.html

https://randlow.github.io/posts/trading/trading-intro-backtrader/
https://algotrading101.com/learn/backtrader-for-backtesting/



-------

ImportError: cannot import name 'warnings' from 'matplotlib.dates' (/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/matplotlib/dates.py)

https://github.com/mementum/backtrader/pull/418/commits/61f0878a4e3616b62d3ad035acafd0ff25da1dec

-------

Back Trader Programs :

https://programtalk.com/vs2/?source=python%2F8277%2Fbacktrader%2Fdocs2%2Fcommission-schemes%2Fstrategy-with-commission.py#



---------

https://pandas-datareader.readthedocs.io/en/latest/remote_data.html#alpha-vantage

to cache API responses:

https://requests-cache.readthedocs.io/en/v0.7.1/user_guide.html

---------
In [4]:  import datetime                                                                                                                                                                                  
In [5]: start = datetime.datetime(2007, 1, 1)                                                                                                                                                             
In [17]: start                                                                                                                                                                                            
Out[17]: datetime.datetime(2007, 1, 1, 0, 0)


In [19]: from datetime import timezone

In [20]: print(start.replace(tzinfo=timezone.utc).timestamp())
1167609600.0


---------
Moving Avg


In [1]: import pandas_datareader.data as web

In [2]: import datetime

In [3]: start = datetime.datetime(2021,1,1)

In [4]: end = datetime.datetime.today()

In [5]: end
Out[5]: datetime.datetime(2021, 7, 19, 13, 5, 33, 783739)

In [6]: start
Out[6]: datetime.datetime(2021, 1, 1, 0, 0)

In [11]: ALPHA_API_KEY = '5P2KW31D61IQN6KH'

In [12]: df = web.DataReader(stock,'av-daily', start, end, api_key=ALPHA_API_KEY)

In [13]: df
Out[13]:
               open     high      low   close   volume
2021-01-04  105.170  106.430  103.765  105.24  1823435
2021-01-05  104.330  105.520  104.255  105.42   988277
2021-01-06  104.310  105.050  101.500  101.53  2295712
2021-01-07  102.000  103.180  101.440  102.81  1662767
2021-01-08  103.280  103.950  102.100  103.46  1974834
...             ...      ...      ...     ...      ...
2021-07-12  117.775  118.255  115.290  115.55  1127828
2021-07-13  115.310  116.690  115.020  115.14   936234
2021-07-14  115.640  116.830  115.300  116.01   703099
2021-07-15  116.010  116.790  115.450  116.45   862221
2021-07-16  116.870  117.840  116.400  117.03   718977

[135 rows x 5 columns]

In [14]: df['MA5Days'] = df['close'].rolling(5).mean()

In [15]: df
Out[15]:
               open     high      low   close   volume  MA5Days
2021-01-04  105.170  106.430  103.765  105.24  1823435      NaN
2021-01-05  104.330  105.520  104.255  105.42   988277      NaN
2021-01-06  104.310  105.050  101.500  101.53  2295712      NaN
2021-01-07  102.000  103.180  101.440  102.81  1662767      NaN
2021-01-08  103.280  103.950  102.100  103.46  1974834  103.692
...             ...      ...      ...     ...      ...      ...
2021-07-12  117.775  118.255  115.290  115.55  1127828  117.262
2021-07-13  115.310  116.690  115.020  115.14   936234  116.852
2021-07-14  115.640  116.830  115.300  116.01   703099  116.464
2021-07-15  116.010  116.790  115.450  116.45   862221  116.210
2021-07-16  116.870  117.840  116.400  117.03   718977  116.036

[135 rows x 6 columns]

In [16]:
