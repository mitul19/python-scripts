mpatel@blr-mpgxf nse_fo % ipython3 

Python 3.8.3 (v3.8.3:6f8c8320e9, May 13 2020, 16:29:34) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.17.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]:                                                                                                                                                                                                                                                                                                                                                                   

In [1]: import pandas as pd                                                                                                                                                                                                                                                                                                                                               

In [2]: data = pd.read_csv('IOC.NS.modified.csv')                                                                                                                                                                                                                                                                                                                         

In [3]: data                                                                                                                                                                                                                                                                                                                                                              
Out[3]: 
      Unnamed: 0        Date       Open       High        Low      Close  Adj Close    Volume MonthName    DayName  Day  Month  Year  week  weekday
0              0  1996-04-15  27.083300  27.083300  25.833300  25.833300   0.007410     28800     April     Monday   15      4  1996    16        0
1              1  1996-04-17  25.833300  25.833300  25.833300  25.833300   0.007410      2400     April  Wednesday   17      4  1996    16        2
2              2  1996-04-18  25.833300  27.083300  25.833300  25.833300   0.007410      9600     April   Thursday   18      4  1996    16        3
3              3  1996-04-19  25.833300  25.833300  25.833300  25.833300   0.007410      4800     April     Friday   19      4  1996    16        4
4              4  1996-04-22  25.833300  25.833300  25.833300  25.833300   0.007410      4800     April     Monday   22      4  1996    17        0
...          ...         ...        ...        ...        ...        ...        ...       ...       ...        ...  ...    ...   ...   ...      ...
5818        5818  2020-08-03  88.349998  88.349998  85.400002  86.199997  86.199997  31445434    August     Monday    3      8  2020    32        0
5819        5819  2020-08-04  86.300003  87.449997  85.800003  86.949997  86.949997  25498364    August    Tuesday    4      8  2020    32        1
5820        5820  2020-08-05  87.000000  88.050003  86.300003  86.599998  86.599998  21667810    August  Wednesday    5      8  2020    32        2
5821        5821  2020-08-06  86.800003  88.199997  86.300003  87.199997  87.199997  19663435    August   Thursday    6      8  2020    32        3
5822        5822  2020-08-07  87.699997  88.400002  85.650002  86.400002  86.400002  22263275    August     Friday    7      8  2020    32        4

[5823 rows x 15 columns]

In [5]: data['Date']                                                                                                                                                                                                                                                                                                                                                      
Out[5]: 
0       1996-04-15
1       1996-04-17
2       1996-04-18
3       1996-04-19
4       1996-04-22
           ...    
5818    2020-08-03
5819    2020-08-04
5820    2020-08-05
5821    2020-08-06
5822    2020-08-07
Name: Date, Length: 5823, dtype: object

In [6]: data['Date'][0]                                                                                                                                                                                                                                                                                                                                                   
Out[6]: '1996-04-15'

In [11]: data['High'][0] - data['Low'][0]                                                                                                                                                                                                                                                                                                                                 
Out[11]: 1.25

In [12]: data['High'] - data['Low']                                                                                                                                                                                                                                                                                                                                       
Out[12]: 
0       1.250000
1       0.000000
2       1.250000
3       0.000000
4       0.000000
          ...   
5818    2.949997
5819    1.649994
5820    1.750000
5821    1.899994
5822    2.750000
Length: 5823, dtype: float64



In [15]: (data['High'] - data['Low'])/data['Low']                                                                                                                                                                                                                                                                                                                         
Out[15]: 
0       0.048387
1       0.000000
2       0.048387
3       0.000000
4       0.000000
          ...   
5818    0.034543
5819    0.019231
5820    0.020278
5821    0.022016
5822    0.032107
Length: 5823, dtype: float64

In [16]: (data['High'] - data['Low'])*100/data['Low']                                                                                                                                                                                                                                                                                                                     
Out[16]: 
0       4.838716
1       0.000000
2       4.838716
3       0.000000
4       0.000000
          ...   
5818    3.454329
5819    1.923070
5820    2.027810
5821    2.201615
5822    3.210741
Length: 5823, dtype: float64

In [17]: data['Range_pct'] = (data['High'] - data['Low'])*100/data['Low']                                                                                                                                                                                                                                                                                                 

In [18]: data                                                                                                                                                                                                                                                                                                                                                             
Out[18]: 
      Unnamed: 0        Date       Open       High        Low      Close  Adj Close    Volume MonthName    DayName  Day  Month  Year  week  weekday  Range_pct
0              0  1996-04-15  27.083300  27.083300  25.833300  25.833300   0.007410     28800     April     Monday   15      4  1996    16        0   4.838716
1              1  1996-04-17  25.833300  25.833300  25.833300  25.833300   0.007410      2400     April  Wednesday   17      4  1996    16        2   0.000000
2              2  1996-04-18  25.833300  27.083300  25.833300  25.833300   0.007410      9600     April   Thursday   18      4  1996    16        3   4.838716
3              3  1996-04-19  25.833300  25.833300  25.833300  25.833300   0.007410      4800     April     Friday   19      4  1996    16        4   0.000000
4              4  1996-04-22  25.833300  25.833300  25.833300  25.833300   0.007410      4800     April     Monday   22      4  1996    17        0   0.000000
...          ...         ...        ...        ...        ...        ...        ...       ...       ...        ...  ...    ...   ...   ...      ...        ...
5818        5818  2020-08-03  88.349998  88.349998  85.400002  86.199997  86.199997  31445434    August     Monday    3      8  2020    32        0   3.454329
5819        5819  2020-08-04  86.300003  87.449997  85.800003  86.949997  86.949997  25498364    August    Tuesday    4      8  2020    32        1   1.923070
5820        5820  2020-08-05  87.000000  88.050003  86.300003  86.599998  86.599998  21667810    August  Wednesday    5      8  2020    32        2   2.027810
5821        5821  2020-08-06  86.800003  88.199997  86.300003  87.199997  87.199997  19663435    August   Thursday    6      8  2020    32        3   2.201615
5822        5822  2020-08-07  87.699997  88.400002  85.650002  86.400002  86.400002  22263275    August     Friday    7      8  2020    32        4   3.210741

[5823 rows x 16 columns]

In [19]: data['Close_pct'] = (data['Open'] - data['Close'])*100/data['Close']                                                                                                                                                                                                                                                                                             

In [20]: data                                                                                                                                                                                                                                                                                                                                                             
Out[20]: 
      Unnamed: 0        Date       Open       High        Low      Close  Adj Close    Volume MonthName    DayName  Day  Month  Year  week  weekday  Range_pct  Close_pct
0              0  1996-04-15  27.083300  27.083300  25.833300  25.833300   0.007410     28800     April     Monday   15      4  1996    16        0   4.838716   4.838716
1              1  1996-04-17  25.833300  25.833300  25.833300  25.833300   0.007410      2400     April  Wednesday   17      4  1996    16        2   0.000000   0.000000
2              2  1996-04-18  25.833300  27.083300  25.833300  25.833300   0.007410      9600     April   Thursday   18      4  1996    16        3   4.838716   0.000000
3              3  1996-04-19  25.833300  25.833300  25.833300  25.833300   0.007410      4800     April     Friday   19      4  1996    16        4   0.000000   0.000000
4              4  1996-04-22  25.833300  25.833300  25.833300  25.833300   0.007410      4800     April     Monday   22      4  1996    17        0   0.000000   0.000000
...          ...         ...        ...        ...        ...        ...        ...       ...       ...        ...  ...    ...   ...   ...      ...        ...        ...
5818        5818  2020-08-03  88.349998  88.349998  85.400002  86.199997  86.199997  31445434    August     Monday    3      8  2020    32        0   3.454329   2.494201
5819        5819  2020-08-04  86.300003  87.449997  85.800003  86.949997  86.949997  25498364    August    Tuesday    4      8  2020    32        1   1.923070  -0.747549
5820        5820  2020-08-05  87.000000  88.050003  86.300003  86.599998  86.599998  21667810    August  Wednesday    5      8  2020    32        2   2.027810   0.461896
5821        5821  2020-08-06  86.800003  88.199997  86.300003  87.199997  87.199997  19663435    August   Thursday    6      8  2020    32        3   2.201615  -0.458709
5822        5822  2020-08-07  87.699997  88.400002  85.650002  86.400002  86.400002  22263275    August     Friday    7      8  2020    32        4   3.210741   1.504624

[5823 rows x 17 columns]

In [21]: data.head()                                                                                                                                                                                                                                                                                                                                                      
Out[21]: 
   Unnamed: 0        Date     Open     High      Low    Close  Adj Close  Volume MonthName    DayName  Day  Month  Year  week  weekday  Range_pct  Close_pct
0           0  1996-04-15  27.0833  27.0833  25.8333  25.8333    0.00741   28800     April     Monday   15      4  1996    16        0   4.838716   4.838716
1           1  1996-04-17  25.8333  25.8333  25.8333  25.8333    0.00741    2400     April  Wednesday   17      4  1996    16        2   0.000000   0.000000
2           2  1996-04-18  25.8333  27.0833  25.8333  25.8333    0.00741    9600     April   Thursday   18      4  1996    16        3   4.838716   0.000000
3           3  1996-04-19  25.8333  25.8333  25.8333  25.8333    0.00741    4800     April     Friday   19      4  1996    16        4   0.000000   0.000000
4           4  1996-04-22  25.8333  25.8333  25.8333  25.8333    0.00741    4800     April     Monday   22      4  1996    17        0   0.000000   0.000000

                                                                                                                                                                                                                                                                                                                                            

In [25]: for index, row in data.head().iterrows(): 
    ...:     if(row['DayName'] == 'Monday'): 
    ...:         print(row['Range_pct'],row['Close_pct']) 
    ...:                                                                                                                                                                                                                                                                                                                                                                  
4.838715988945436 4.838715988945436
0.0 0.0



In [43]: data['Range_pct']                                                                                                                                                                                                                                                                                                                                                
Out[43]: 
0       4.838716
1       0.000000
2       4.838716
3       0.000000
4       0.000000
          ...   
5818    3.454329
5819    1.923070
5820    2.027810
5821    2.201615
5822    3.210741
Name: Range_pct, Length: 5823, dtype: float64


In [58]:  for index, row in data.iterrows(): 
    ...:     if(row['DayName'] == 'Monday'): 
    ...:        Mon_array.append(row['Range_pct']) 
    ...:                                                                                                                                                                                                                                                                                                                                                                  

In [59]: Mon_array                                                                                                                                                                                                                                                                                                                                                        
Out[59]: 
[4.838715988945436,
 0.0,
 ..

In [71]: Monday = pd.DataFrame(Mon_array)                                                                                                                                                                                                                                                                                                                                 

In [72]: Monday                                                                                                                                                                                                                                                                                                                                                           
Out[72]: 
              0
0      4.838716
1      0.000000
2     10.000261
3      0.000000
4      0.131366
...         ...
1173   2.701148
1174   1.798147
1175   2.727799
1176   4.649891
1177   3.454329

[1178 rows x 1 columns]


In [74]: Monday.sort_values(0)                                                                                                                                                                                                                                                                                                                                            
Out[74]: 
             0
51    0.000000
38    0.000000
62    0.000000
66    0.000000
57    0.000000
..         ...
288  18.069926
375  22.033898
611  25.564972
626  27.410155
561  38.085106

[1178 rows x 1 columns]

In [75]: data                                                                                                                                                                                                                                                                                                                                                             
Out[75]: 
      Unnamed: 0        Date       Open       High        Low      Close  Adj Close    Volume MonthName    DayName  Day  Month  Year  week  weekday  Range_pct  Close_pct
0              0  1996-04-15  27.083300  27.083300  25.833300  25.833300   0.007410     28800     April     Monday   15      4  1996    16        0   4.838716   4.838716
1              1  1996-04-17  25.833300  25.833300  25.833300  25.833300   0.007410      2400     April  Wednesday   17      4  1996    16        2   0.000000   0.000000
2              2  1996-04-18  25.833300  27.083300  25.833300  25.833300   0.007410      9600     April   Thursday   18      4  1996    16        3   4.838716   0.000000
3              3  1996-04-19  25.833300  25.833300  25.833300  25.833300   0.007410      4800     April     Friday   19      4  1996    16        4   0.000000   0.000000
4              4  1996-04-22  25.833300  25.833300  25.833300  25.833300   0.007410      4800     April     Monday   22      4  1996    17        0   0.000000   0.000000
...          ...         ...        ...        ...        ...        ...        ...       ...       ...        ...  ...    ...   ...   ...      ...        ...        ...
5818        5818  2020-08-03  88.349998  88.349998  85.400002  86.199997  86.199997  31445434    August     Monday    3      8  2020    32        0   3.454329   2.494201
5819        5819  2020-08-04  86.300003  87.449997  85.800003  86.949997  86.949997  25498364    August    Tuesday    4      8  2020    32        1   1.923070  -0.747549
5820        5820  2020-08-05  87.000000  88.050003  86.300003  86.599998  86.599998  21667810    August  Wednesday    5      8  2020    32        2   2.027810   0.461896
5821        5821  2020-08-06  86.800003  88.199997  86.300003  87.199997  87.199997  19663435    August   Thursday    6      8  2020    32        3   2.201615  -0.458709
5822        5822  2020-08-07  87.699997  88.400002  85.650002  86.400002  86.400002  22263275    August     Friday    7      8  2020    32        4   3.210741   1.504624

[5823 rows x 17 columns]

In [76]: data.to_csv('IOC.pct.csv')                                                                                                                                                                                                                                                                                                                                       

In [77]: Monday.quantile(0.10,0)                                                                                                                                                                                                                                                                                                                                          
Out[77]: 
0    1.495945
Name: 0.1, dtype: float64

In [78]: Monday.quantile(0.01,0)                                                                                                                                                                                                                                                                                                                                          
Out[78]: 
0    0.0
Name: 0.01, dtype: float64

In [79]: Monday.quantile(0.9,0)                                                                                                                                                                                                                                                                                                                                           
Out[79]: 
0    6.52595
Name: 0.9, dtype: float64

In [80]: Monday.quantile(0.99,0)                                                                                                                                                                                                                                                                                                                                          
Out[80]: 
0    12.860739
Name: 0.99, dtype: float64

In [82]: len(Monday.index)                                                                                                                                                                                                                                                                                                                                                
Out[82]: 1178

In [83]: Monday.index                                                                                                                                                                                                                                                                                                                                                     
Out[83]: RangeIndex(start=0, stop=1178, step=1)

--------

In [13]: RunCount = LenData - loop                                                                                                                                                                                                                                                                                                                                        

In [14]: RunCount                                                                                                                                                                                                                                                                                                                                                         
Out[14]: 5463

In [6]: len(data['High'])                                                                                                                                                                                                                                                                                                                                                 
Out[6]: 5823

In [31]: LenData = len(data['High'])  

In [34]: DateArray = []                                                                                                                                                                                                                                                                                                                                                   

In [35]: OutArray = []                                                                                                                                                                                                                                                                                                                                                    

In [36]: while (LenData > RunCount): 
    ...:     OutValue = ((data['Adj Close'][LenData-1]/data['Adj Close'][LenData-5])-1)*100 
    ...:     LenData = LenData - 1 
    ...:     OutArray.append(OutValue) 
    ...:     DateArray.append(data['Date'][LenData-1])

In [43]: OutSet = pd.DataFrame({'Date': DateArray, 'Mom5day': OutArray})                                                                                                                                                                                                                                                                                                  

In [44]: OutSet                                                                                                                                                                                                                                                                                                                                                           
Out[44]: 
           Date   Mom5day
0    2020-08-05 -1.413228
1    2020-08-04 -2.202151
2    2020-08-03 -6.101514
3    2020-07-31 -7.708784
4    2020-07-30 -5.653337
..          ...       ...
354  2019-02-20  4.503800
355  2019-02-19  3.730444
356  2019-02-18 -6.790347
357  2019-02-15 -8.023564
358  2019-02-14 -6.240670

[359 rows x 2 columns]

In [45]:

-------- 

Momemtum columns

mpatel@blr-mpgxf TechWeekDemo % ipython3
Python 3.8.3 (v3.8.3:6f8c8320e9, May 13 2020, 16:29:34) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.17.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: import pandas as pd                                                                                                                                           

In [2]: data = pd.read_csv('akam1.csv')                                                                                                                               

In [3]: data                                                                                                                                                          

In [4]: date_list = pd.to_datetime(data['timestamp'])                                                                                                                 

In [5]: date_list 

In [6]: data['MonthName'] = date_list.dt.month_name()                                                                                                                 

In [7]: data['DayName'] = date_list.dt.day_name()                                                                                                                     

In [8]: data['Week'] = date_list.dt.week                                                                                                                              

In [9]: data['Weekday'] = date_list.dt.weekday                                                                                                                        

In [10]: data['Year'] = date_list.dt.year                                                                                                                             

In [11]: data['Month'] = date_list.dt.month                                                                                                                           

In [12]: data['Day'] = date_list.dt.day                                                                                                                               

In [13]: data                                                                                                                                                         
Out[13]: 
     timestamp    open    high      low   close  adjusted_close   volume  dividend_amount  split_coefficient MonthName    DayName  Week  Weekday  Year  Month  Day
0   2020-12-02  103.40  104.45  102.460  103.46          103.46  1083871              0.0                1.0  December  Wednesday    49        2  2020     12    2
1   2020-12-01  103.17  104.36  101.955  104.21          104.21  1722088              0.0                1.0  December    Tuesday    49        1  2020     12    1
2   2020-11-30  104.46  104.46  103.060  103.51          103.51  2355350              0.0                1.0  November     Monday    49        0  2020     11   30
3   2020-11-27  103.92  105.31  103.420  104.32          104.32   725172              0.0                1.0  November     Friday    48        4  2020     11   27
4   2020-11-25  102.49  104.14  102.365  103.74          103.74   873374              0.0                1.0  November  Wednesday    48        2  2020     11   25
..         ...     ...     ...      ...     ...             ...      ...              ...                ...       ...        ...   ...      ...   ...    ...  ...
95  2020-07-20  112.94  115.86  112.810  115.24          115.24  1524243              0.0                1.0      July     Monday    30        0  2020      7   20
96  2020-07-17  111.33  112.74  110.810  112.65          112.65   953600              0.0                1.0      July     Friday    29        4  2020      7   17
97  2020-07-16  110.32  112.20  110.320  111.66          111.66  1369100              0.0                1.0      July   Thursday    29        3  2020      7   16
98  2020-07-15  111.78  113.65  111.110  112.78          112.78  2232800              0.0                1.0      July  Wednesday    29        2  2020      7   15
99  2020-07-14  109.97  112.36  108.700  112.27          112.27  2089900              0.0                1.0      July    Tuesday    29        1  2020      7   14

[100 rows x 16 columns]


In [36]: data['Range_pct'] = ((data['high']/data['low']) - 1) * 100                                                                                                   

In [38]: data['Close_pct'] = ((data['open']/data['close']) - 1) * 100                                                                                                 


In [98]: count = 0                                                                                                                                                            

In [99]: mom1                                                                                                                                                                 
Out[99]: 1

In [100]: while(count < len(data.index)): 
     ...:     if (count + mom1 < len(data.index)): 
     ...:         data.loc[count, 'mom1day'] = ((data['adjusted_close'][count]/data['adjusted_close'][count+mom1])-1)*100  
     ...:     else:  
     ...:         data.loc[count, 'mom1day'] = 0.0 
     ...:     count = count + 1 
     ...:                                                                                                                                                                     

In [101]: data                                                                                                                                                                
Out[101]: 
     timestamp    open    high      low   close  adjusted_close   volume  dividend_amount  ...    DayName Week  Year  Month  Day  Range_pct  Close_pct   mom1day
0   2020-12-02  103.40  104.45  102.460  103.46          103.46  1083871              0.0  ...  Wednesday   49  2020     12    2   1.942221  -0.057993 -0.719701
1   2020-12-01  103.17  104.36  101.955  104.21          104.21  1722088              0.0  ...    Tuesday   49  2020     12    1   2.358884  -0.997985  0.676263
2   2020-11-30  104.46  104.46  103.060  103.51          103.51  2355350              0.0  ...     Monday   49  2020     11   30   1.358432   0.917786 -0.776457
3   2020-11-27  103.92  105.31  103.420  104.32          104.32   725172              0.0  ...     Friday   48  2020     11   27   1.827500  -0.383436  0.559090
4   2020-11-25  102.49  104.14  102.365  103.74          103.74   873374              0.0  ...  Wednesday   48  2020     11   25   1.733991  -1.204935  1.190012
..         ...     ...     ...      ...     ...             ...      ...              ...  ...        ...  ...   ...    ...  ...        ...        ...       ...
95  2020-07-20  112.94  115.86  112.810  115.24          115.24  1524243              0.0  ...     Monday   30  2020      7   20   2.703661  -1.995835  2.299157
96  2020-07-17  111.33  112.74  110.810  112.65          112.65   953600              0.0  ...     Friday   29  2020      7   17   1.741720  -1.171771  0.886620
97  2020-07-16  110.32  112.20  110.320  111.66          111.66  1369100              0.0  ...   Thursday   29  2020      7   16   1.704133  -1.200072 -0.993084
98  2020-07-15  111.78  113.65  111.110  112.78          112.78  2232800              0.0  ...  Wednesday   29  2020      7   15   2.286023  -0.886682  0.454262
99  2020-07-14  109.97  112.36  108.700  112.27          112.27  2089900              0.0  ...    Tuesday   29  2020      7   14   3.367065  -2.048633  0.000000

[100 rows x 18 columns]

In [102]:         


In [147]: data['adjusted_close'][::-1].cummax()                                                                                                                               
Out[147]: 
99    112.27
98    112.78
97    112.78
96    112.78
95    115.24
       ...  
4     119.57
3     119.57
2     119.57
1     119.57
0     119.57
Name: adjusted_close, Length: 100, dtype: float64

In [148]: data['adjusted_close'][::-1].cummax()[::-1]                                                                                                                         
Out[148]: 
0     119.57
1     119.57
2     119.57
3     119.57
4     119.57
       ...  
95    115.24
96    112.78
97    112.78
98    112.78
99    112.27
Name: adjusted_close, Length: 100, dtype: float64

In [149]:

In [152]: data['MDD'] = ((data['adjusted_close'][::-1].cummax()[::-1]/data['adjusted_close'])-1) * 100                                                                        

In [153]: data                                                                                                                                                                
Out[153]: 
     timestamp    open    high      low   close  adjusted_close   volume  dividend_amount  ...  Week  Year Month  Day  Range_pct  Close_pct   mom1day        MDD
0   2020-12-02  103.40  104.45  102.460  103.46          103.46  1083871              0.0  ...    49  2020    12    2   1.942221  -0.057993 -0.719701  15.571235
1   2020-12-01  103.17  104.36  101.955  104.21          104.21  1722088              0.0  ...    49  2020    12    1   2.358884  -0.997985  0.676263  14.739468
2   2020-11-30  104.46  104.46  103.060  103.51          103.51  2355350              0.0  ...    49  2020    11   30   1.358432   0.917786 -0.776457  15.515409
3   2020-11-27  103.92  105.31  103.420  104.32          104.32   725172              0.0  ...    48  2020    11   27   1.827500  -0.383436  0.559090  14.618482
4   2020-11-25  102.49  104.14  102.365  103.74          103.74   873374              0.0  ...    48  2020    11   25   1.733991  -1.204935  1.190012  15.259302
..         ...     ...     ...      ...     ...             ...      ...              ...  ...   ...   ...   ...  ...        ...        ...       ...        ...
95  2020-07-20  112.94  115.86  112.810  115.24          115.24  1524243              0.0  ...    30  2020     7   20   2.703661  -1.995835  2.299157   0.000000
96  2020-07-17  111.33  112.74  110.810  112.65          112.65   953600              0.0  ...    29  2020     7   17   1.741720  -1.171771  0.886620   0.115402
97  2020-07-16  110.32  112.20  110.320  111.66          111.66  1369100              0.0  ...    29  2020     7   16   1.704133  -1.200072 -0.993084   1.003045
98  2020-07-15  111.78  113.65  111.110  112.78          112.78  2232800              0.0  ...    29  2020     7   15   2.286023  -0.886682  0.454262   0.000000
99  2020-07-14  109.97  112.36  108.700  112.27          112.27  2089900              0.0  ...    29  2020     7   14   3.367065  -2.048633  0.000000   0.000000

[100 rows x 19 columns]

In [154]:

In [3]: data = pd.read_csv('temp_final.csv')                                                                                                                                  

In [7]: data['DayName'].unique()                                                                                                                                                                                                                                                                                                                                          

In [9]: outgraph = px.violin(data, y = "mon5day", x = "DayName",box=True, points="all",hover_data=data.columns, title="daywise 5day momentum")                                

In [11]: outgraph.write_html("charts/akam_mon5day_test.html",include_plotlyjs="plotlyv1.54.1.js")                                                                             

In [12]: outgraph = px.histogram(data, x = "Close_pct", color = "DayName", marginal="rug", hover_data=data.columns, title="daywise Close_pct")                                

In [13]: outgraph.write_html("charts/akam_Closepct_test.html",include_plotlyjs="plotlyv1.54.1.js")                                                                            

In [17]: import plotly.graph_objects as go                                                                                                                                    

In [20]: fig = go.Figure(data=[go.Candlestick(x=data['timestamp'], open=data['open'], high=data['high'], low=data['low'], close=data['close'])])                              

In [7]: fig = px.scatter_matrix(data, dimensions=["mom1day", "mom5day", "mom20day"])                                                                                                                                                                                                                                                                                      

In [11]: fig.show()                                                                                                                                                                                                                                                                                                                                                       

In [12]: fig = px.scatter_3d(data, z="mom1day", y="mom5day", x="mom20day", title="momentum scatter 3d plot")                                                                                                                                                                                                                                                              

In [13]: fig.show()                                                                                                                                                                                                                                                                                                                                                       


To check speed 
In [52]: %%timeit -n 5  


-----

https://mrjbq7.github.io/ta-lib/doc_index.html
https://mrjbq7.github.io/ta-lib/func_groups/overlap_studies.html

mpatel@blr-mpgxf yf_api % brew install ta-lib
mpatel@blr-mpgxf yf_api % pip3 install TA-Lib

In [70]: import talib 

In [73]: output = talib.SMA(data['Close'], timeperiod=5)                                                                                                                                                  

In [74]: output                                                                                                                                                                                           
Out[74]: 
0              NaN
1              NaN
2              NaN
3              NaN
4       185.600000
           ...    
3361    718.209998
3362    716.469995
3363    711.900000
3364    709.379993
3365    701.199988
Length: 3352, dtype: float64

https://www.fmlabs.com/reference/default.htm?url=ATR.htm
